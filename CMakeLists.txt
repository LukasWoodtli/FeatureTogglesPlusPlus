# Lukas Woodtli Copyright (C) 2014

#
# Project Properties
#
CMAKE_MINIMUM_REQUIRED (VERSION 2.6.2)
PROJECT (FeatureTogglesPlusPlus)
SET (APPLICATION_NAME "FeaturesToggle++")
SET (APPLICATION_CODENAME "${PROJECT_NAME}")
SET (APPLICATION_COPYRIGHT_YEARS "2014")
SET (APPLICATION_VERSION_MAJOR 1)
SET (APPLICATION_VERSION_MINOR 0)
SET (APPLICATION_VERSION_PATCH 0)
SET (APPLICATION_VERSION_TYPE SNAPSHOT)
SET (APPLICATION_VERSION_STRING "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}.${APPLICATION_VERSION_PATCH}-${APPLICATION_VERSION_TYPE}")
SET (APPLICATION_VENDOR_ID "com.woodtli.lukas")
SET (APPLICATION_VENDOR_NAME "Lukas Woodtli")
SET (APPLICATION_VENDOR_URL "yourcompany.com")
SET (APPLICATION_ID "${APPLICATION_VENDOR_ID}.${PROJECT_NAME}")


#
# General Options
# TODO
option(DOC_GEN_ENABLED "Build Doxygen user documentation" OFF)

#
# Static Analysis
#
#OPTION(CMAKE_EXPORT_COMPILE_COMMANDS "Generate compile_commands.json
# for OCLint" ON) # used for oclint. Nor working yet



#
# Debugging Options
#
SET (CMAKE_VERBOSE_MAKEFILE 0) # Use 1 for debugging, 0 for release

#
# Project Output Paths
#
SET (MAINFOLDER ${PROJECT_SOURCE_DIR})
SET (EXECUTABLE_OUTPUT_PATH "${MAINFOLDER}/bin")
SET (LIBRARY_OUTPUT_PATH "${MAINFOLDER}/lib")

#
# Project Search Paths
#
LIST (APPEND CMAKE_PREFIX_PATH "${MAINFOLDER}")
LIST (APPEND CMAKE_PREFIX_PATH "${MAINFOLDER}/tools")
LIST (APPEND CMAKE_PREFIX_PATH "${MAINFOLDER}/thirdparty")

list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/tools/share/cmake)

INCLUDE_DIRECTORIES("${MAINFOLDER}/include" "${MAINFOLDER}/include/FeaturesTogglePlusPlus" "${MAINFOLDER}/src")
include_directories(${CMAKE_CURRENT_SOURCE_DIR})

#
# gmock and gtest
#
enable_testing()
INCLUDE (gmock)

#
# Configure Files
#
FILE (GLOB_RECURSE CONFIGINPUTS1 include/*.in.h.cmake)
FILE (GLOB_RECURSE CONFIGINPUTS2 include/*.h.in.cmake)
FILE (GLOB_RECURSE CONFIGINPUTS3 src/*.in.h.cmake)
FILE (GLOB_RECURSE CONFIGINPUTS4 src/*.h.in.cmake)
IF(UNIT_TESTS_ENABLED)
  FILE (GLOB_RECURSE CONFIGINPUTS5 test/*.in.h.cmake)
  FILE (GLOB_RECURSE CONFIGINPUTS6 test/*.h.in.cmake)
ENDIF(UNIT_TESTS_ENABLED)
LIST (APPEND CONFIGINPUTS "${CONFIGINPUTS1}")
LIST (APPEND CONFIGINPUTS "${CONFIGINPUTS2}")
LIST (APPEND CONFIGINPUTS "${CONFIGINPUTS3}")
LIST (APPEND CONFIGINPUTS "${CONFIGINPUTS4}")
LIST (APPEND CONFIGINPUTS "${CONFIGINPUTS5}")
LIST (APPEND CONFIGINPUTS "${CONFIGINPUTS6}")
FOREACH (CONFIGINPUT ${CONFIGINPUTS})
    STRING (REPLACE ".in.h.cmake" ".h" CONFIGOUTPUT1 "${CONFIGINPUT}")
    STRING (REPLACE ".h.in.cmake" ".h" CONFIGOUTPUT2 "${CONFIGOUTPUT1}")
    CONFIGURE_FILE ("${CONFIGINPUT}" "${CONFIGOUTPUT2}")
ENDFOREACH (CONFIGINPUT ${CONFIGINPUTS})

#
# Add Build Targets
#
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(include/FeatureTogglesPlusPlus)
ADD_SUBDIRECTORY(test)


#
# Add Install Targets
#
IF (EXISTS "${MAINFOLDER}/include/${PROJECT_NAME}" AND IS_DIRECTORY "${MAINFOLDER}/include/${PROJECT_NAME}")
    INSTALL(DIRECTORY "${MAINFOLDER}/include/${PROJECT_NAME}" DESTINATION "include")
ENDIF (EXISTS "${MAINFOLDER}/include/${PROJECT_NAME}" AND IS_DIRECTORY "${MAINFOLDER}/include/${PROJECT_NAME}")



#
# Add Documentation Targets
#
IF(DOC_GEN_ENABLED)
INCLUDE (DocumentationTargets)
ENDIF(DOC_GEN_ENABLED)


add_test(FeaturesTogglePlusPlus-unittest FeaturesTogglePlusPlus-unittest)

